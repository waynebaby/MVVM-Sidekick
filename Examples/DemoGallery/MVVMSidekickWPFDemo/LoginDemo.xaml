<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  xmlns:glue="clr-namespace:MVVMSidekickWPFDemo.Glue"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mvvm="clr-namespace:MVVMSidekick.Views;assembly=MVVMSidekick_net46"
        xmlns:vm="clr-namespace:MVVMSidekickWPFDemo.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        x:Name="page" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="MVVMSidekickWPFDemo.LoginDemo"
        Height="480" Width="640"
        Title="{Binding DataContext.Title, ElementName=grid}" 
        mc:Ignorable="d">
    <Page.Resources>
        <ControlTemplate x:Key="DataErrorTextBox">
            <StackPanel Orientation="Horizontal">

                <AdornedElementPlaceholder  x:Name="textBox"/>

                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ErrorContent}" Foreground="red"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ControlTemplate>
    </Page.Resources>



    <Grid x:Name="grid" Background="White">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid2">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition GeneratedDuration="0:0:0.4" To="Recovery" From="Logging">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid1">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid2">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid2">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="Recovery" GeneratedDuration="0:0:0.4" To="Logging">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid2">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid2">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid1">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>

                </VisualStateGroup.Transitions>
                <VisualState x:Name="Logging">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid2">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Recovery">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid2">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <d:FrameworkElement.DataContext>
            <vm:LoginDemo_Model/>
        </d:FrameworkElement.DataContext>
        <i:Interaction.Triggers>
            <i:EventTrigger SourceObject="{Binding ElementName=updateVisualStateCommand, Mode=OneWay}" EventName="ViewStateChanged">
                <i:InvokeCommandAction Command="{Binding ElementName=updateVisualStateCommand}" />
            </i:EventTrigger>

            <i:EventTrigger  EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding ElementName=updateVisualStateCommand}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <glue:UpdateVisualStateCommand x:Name="updateVisualStateCommand" TargetObject="{Binding ElementName=grid}"  ViewStateString="{Binding CurrentVisualState}"></glue:UpdateVisualStateCommand>


        <Grid x:Name="grid3" Width="400" Height="300" >

            <Grid x:Name="grid1"  Width="300" Height="120" Visibility="Visible">

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="7*"/>
                </Grid.ColumnDefinitions>
                <Label Margin="2" Content="User Name"/>
                <TextBox Grid.Column="1" Validation.ErrorTemplate="{StaticResource DataErrorTextBox}" Margin="2" 
                         Text="{Binding LoginEntity.UserName,Mode=TwoWay, NotifyOnValidationError=True,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}">

                </TextBox>
                <Label Grid.Row="1" Margin="2" Content="Password">

                </Label>
                <glue:UpdatePasswordCommand x:Name="upcmd" LoginEntity="{Binding DataContext.LoginEntity, ElementName=grid1}"></glue:UpdatePasswordCommand>
                <PasswordBox x:Name="passwordBox" 
                             glue:PasswordBoundHelper.PasswordBound="{Binding LoginEntity.Password,Mode=TwoWay, NotifyOnValidationError=True,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=Explicit}"  
                       Validation.ErrorTemplate="{StaticResource DataErrorTextBox}"
                             Grid.Row="1"  Grid.Column="1" Margin="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PasswordChanged">
                            <i:InvokeCommandAction Command="{Binding ElementName=upcmd}" CommandParameter="{Binding ElementName=passwordBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </PasswordBox>
                <StackPanel Grid.ColumnSpan="2" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Width="100" Margin="2" Content="Login" Command="{Binding CommandLoginIn, Mode=OneWay}"/>
                    <Button Width="100" Margin="2" Content="Forget Password" Command="{Binding CommandStartRecover, Mode=OneWay}"/>
                </StackPanel>

            </Grid>
            <Grid x:Name="grid2"   Width="300" Height="120">

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="7*"/>
                </Grid.ColumnDefinitions>
                <Label Margin="2" Content="Phone"/>
                <glue:UpdatePasswordCommand x:Name="upcmd2" LoginEntity="{Binding DataContext.LoginEntity, ElementName=grid1}"></glue:UpdatePasswordCommand>

                <TextBox Validation.ErrorTemplate="{StaticResource DataErrorTextBox}" Grid.Column="1" Margin="2" Text="{Binding RecoveryEntity.UserPhone,Mode=TwoWay, NotifyOnValidationError=True,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                <Label Grid.Row="1" Margin="2" Content="Code"/>
                <TextBox 
                             x:Name="passwordBox2"
                           Text="{Binding RecoveryEntity.SMSCode,Mode=TwoWay, NotifyOnValidationError=True,ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}"   Validation.ErrorTemplate="{StaticResource DataErrorTextBox}"
                             Grid.Row="1"  Grid.Column="1" Margin="2">

                </TextBox>
                <StackPanel Grid.ColumnSpan="2" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Width="100" Margin="2" Content="Verify" Command="{Binding CommandRecoverySMSCheck, Mode=OneWay}"/>
                    <Button Width="100" Margin="2" Command="{Binding CommandRecoverySMS, Mode=OneWay}">
                        <TextBlock><Run Text="Send SMS"/>:<Run Text="{Binding CountDownOfSMSResend}"/></TextBlock>
                    </Button>
                </StackPanel>

            </Grid>
        </Grid>

    </Grid>
</Page>
